{
  "id": "f4f1f17a-c867-4597-b148-ae0ea6215094",
  "startTime": "2021-06-21T09:30:15+00:00",
  "name": "jsonplaceholder from typecode",
  "key": "JSON-PLACEHOLDER",
  "env": "local",
  "duration": 1.302,
  "success": false,
  "durationFormat": "00:00",
  "timestamp": "2021-06-21T09:30:15+00:00",
  "type": "testSuite",
  "total": 1,
  "passed": 0,
  "failed": 1,
  "skipped": 0,
  "scenarios": {
    "passed": 0,
    "failed": 2,
    "skipped": 0,
    "undefined": 0
  },
  "features": [
    {
      "keyword": "Feature",
      "line": 1,
      "id": "post-/todos",
      "tags": [],
      "uri": "../example/tests/integration/post-todos.feature",
      "elements": [
        {
          "id": "post-/todos;create-a-new-todo",
          "keyword": "Scenario",
          "line": 3,
          "name": "Create A new TODO",
          "tags": [],
          "type": "scenario",
          "steps": [
            {
              "keyword": "Before",
              "hidden": true,
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/hooks.js:5"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "Given ",
              "line": 4,
              "name": "I have the api gateway",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 5,
              "name": "I have the path \"/todos\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 6,
              "name": "I have the method \"POST\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 7,
              "name": "the payload contains \"userId\" as \"1\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 8,
              "name": "the payload contains \"title\" as \"A new RestQA post\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 9,
              "name": "the payload contains \"completed\" as true",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "When ",
              "line": 10,
              "name": "I run the API",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:11"
              },
              "result": {
                "status": "passed",
                "duration": 713000000
              }
            },
            {
              "arguments": [],
              "keyword": "Then ",
              "line": 11,
              "name": "I should receive a response with the status 201",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "passed",
                "duration": 1000000
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 12,
              "name": "the response body at \"userId\" should equal \"1\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 13,
              "name": "the response body at \"id\" should equal 201",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 14,
              "name": "the response body at \"title\" should equal \"sssA new RestQA post\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "failed",
                "duration": 1000000,
                "error_message": "AssertionError [ERR_ASSERTION]: [POST /todos] The response body property title should be sssA new RestQA post <string> but received A new RestQA post <string>\n    + expected - actual\n\n    -A new RestQA post\n    +sssA new RestQA post\n\n    at RestQA.Then.shouldBeString (/Users/olivierodo/WORKS/restqa/restqa/node_modules/@restqa/restqapi/src/restqapi/steps/3-then/functions.js:116:14)"
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 15,
              "name": "the response body at \"completed\" should equal true",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "skipped"
              }
            },
            {
              "keyword": "After",
              "hidden": true,
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/hooks.js:39"
              },
              "result": {
                "status": "passed",
                "duration": 0
              },
              "embeddings": [
                {
                  "data": "{\"apis\":[{\"request\":{\"hostname\":\"jsonplaceholder.typicode.com\",\"port\":\"\",\"protocol\":\"https:\",\"pathname\":\"/todos\",\"hooks\":{\"afterResponse\":[null]},\"method\":\"post\",\"json\":{\"userId\":\"1\",\"title\":\"A new RestQA post\",\"completed\":true},\"headers\":{\"x-correlation-id\":\"test-e2e-post-222-1624267814155\",\"user-agent\":\"restqa (https://github.com/restqa/restqa)\"},\"responseType\":\"json\"},\"response\":{\"body\":{\"userId\":\"1\",\"title\":\"A new RestQA post\",\"completed\":true,\"id\":201},\"timing\":701,\"headers\":{\"date\":\"Mon, 21 Jun 2021 09:30:14 GMT\",\"content-type\":\"application/json; charset=utf-8\",\"content-length\":\"85\",\"connection\":\"close\",\"x-powered-by\":\"Express\",\"x-ratelimit-limit\":\"1000\",\"x-ratelimit-remaining\":\"999\",\"x-ratelimit-reset\":\"1624267845\",\"vary\":\"Origin, X-HTTP-Method-Override, Accept-Encoding\",\"access-control-allow-credentials\":\"true\",\"cache-control\":\"no-cache\",\"pragma\":\"no-cache\",\"expires\":\"-1\",\"access-control-expose-headers\":\"Location\",\"location\":\"http://jsonplaceholder.typicode.com/todos/201\",\"x-content-type-options\":\"nosniff\",\"etag\":\"W/\\\"55-cl/Ip5SF1P3RlOeHcWbQ8MHu3FE\\\"\",\"via\":\"1.1 vegur\",\"cf-cache-status\":\"DYNAMIC\",\"cf-request-id\":\"0acf810dbd00004b6bd119f000000001\",\"expect-ct\":\"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\"report-to\":\"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v2?s=ZyACMschAckaQMdky6tVnLFOHYP%2Bn%2BjmnPWTaYa0FqmFUIJPKtqSlL5JU50i0dxd8uzztcDMYfWopLGW3B2smBR8eKhA8PxcJQ6PMNNKowKq%2Fh8dCSwKEgREz8dQu3r3I1qmPQavou0t6w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\"nel\":\"{\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\"server\":\"cloudflare\",\"cf-ray\":\"662c378f9e394b6b-BKK\",\"alt-svc\":\"h3-27=\\\":443\\\"; ma=86400, h3-28=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400, h3=\\\":443\\\"; ma=86400\"},\"statusCode\":201,\"request\":{\"path\":\"/todos\",\"method\":\"post\",\"prefix\":\"[POST /todos]\"}}}]}",
                  "mime_type": "application/json"
                }
              ]
            }
          ],
          "step_passed": 12,
          "step_failed": 1,
          "step_skipped": 1,
          "step_undefined": 0,
          "result": false,
          "status": "failed",
          "duration": 0.715,
          "timestamp": "2021-06-21T09:30:15+00:00",
          "metadata": {
            "id": "f4f1f17a-c867-4597-b148-ae0ea6215094",
            "startTime": "2021-06-21T09:30:15+00:00",
            "name": "jsonplaceholder from typecode",
            "key": "JSON-PLACEHOLDER",
            "env": "local",
            "duration": 1.302,
            "success": false,
            "durationFormat": "00:00"
          }
        },
        {
          "id": "post-/todos;create-a-new-todo-but-the-userid-doesn't-exists",
          "keyword": "Scenario",
          "line": 17,
          "name": "Create A new TODO but the userId doesn't exists",
          "tags": [],
          "type": "scenario",
          "steps": [
            {
              "keyword": "Before",
              "hidden": true,
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/hooks.js:5"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "Given ",
              "line": 18,
              "name": "I have the api gateway",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 19,
              "name": "I have the path \"/todos\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 20,
              "name": "I have the method \"POST\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 21,
              "name": "the payload contains \"userId\" as \"10101010\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 22,
              "name": "the payload contains \"title\" as \"A new RestQA post\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 23,
              "name": "the payload contains \"completed\" as true",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "When ",
              "line": 24,
              "name": "I run the API",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:11"
              },
              "result": {
                "status": "passed",
                "duration": 587000000
              }
            },
            {
              "arguments": [],
              "keyword": "Then ",
              "line": 25,
              "name": "I should receive a response with the status 201",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "passed",
                "duration": 0
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 26,
              "name": "the response body at \"userIds\" should equal \"10101010\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "failed",
                "duration": 0,
                "error_message": "AssertionError [ERR_ASSERTION]: [POST /todos] The response body property userIds should be 10101010 <string> but received undefined <undefined>\n    at RestQA.Then.shouldBeString (/Users/olivierodo/WORKS/restqa/restqa/node_modules/@restqa/restqapi/src/restqapi/steps/3-then/functions.js:116:14)"
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 27,
              "name": "the response body at \"id\" should equal 201",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "skipped"
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 28,
              "name": "the response body at \"title\" should equal \"A new RestQA post\"",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "skipped"
              }
            },
            {
              "arguments": [],
              "keyword": "And ",
              "line": 29,
              "name": "the response body at \"completed\" should equal true",
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16"
              },
              "result": {
                "status": "skipped"
              }
            },
            {
              "keyword": "After",
              "hidden": true,
              "match": {
                "location": "../node_modules/@restqa/restqapi/src/restqapi/hooks.js:39"
              },
              "result": {
                "status": "passed",
                "duration": 0
              },
              "embeddings": [
                {
                  "data": "{\"apis\":[{\"request\":{\"hostname\":\"jsonplaceholder.typicode.com\",\"port\":\"\",\"protocol\":\"https:\",\"pathname\":\"/todos\",\"hooks\":{\"afterResponse\":[null]},\"method\":\"post\",\"json\":{\"userId\":\"10101010\",\"title\":\"A new RestQA post\",\"completed\":true},\"headers\":{\"x-correlation-id\":\"test-e2e-post-121-1624267814876\",\"user-agent\":\"restqa (https://github.com/restqa/restqa)\"},\"responseType\":\"json\"},\"response\":{\"body\":{\"userId\":\"10101010\",\"title\":\"A new RestQA post\",\"completed\":true,\"id\":201},\"timing\":583,\"headers\":{\"date\":\"Mon, 21 Jun 2021 09:30:15 GMT\",\"content-type\":\"application/json; charset=utf-8\",\"content-length\":\"92\",\"connection\":\"close\",\"x-powered-by\":\"Express\",\"x-ratelimit-limit\":\"1000\",\"x-ratelimit-remaining\":\"998\",\"x-ratelimit-reset\":\"1624267845\",\"vary\":\"Origin, X-HTTP-Method-Override, Accept-Encoding\",\"access-control-allow-credentials\":\"true\",\"cache-control\":\"no-cache\",\"pragma\":\"no-cache\",\"expires\":\"-1\",\"access-control-expose-headers\":\"Location\",\"location\":\"http://jsonplaceholder.typicode.com/todos/201\",\"x-content-type-options\":\"nosniff\",\"etag\":\"W/\\\"5c-M6IBmi9lekUmoqpCfVhYtwkWl58\\\"\",\"via\":\"1.1 vegur\",\"cf-cache-status\":\"DYNAMIC\",\"cf-request-id\":\"0acf81107f00004ba017bc9000000001\",\"expect-ct\":\"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\"report-to\":\"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v2?s=6Lzj7tGBr8y%2F%2BrfdpMP1cjsy%2BcbJUgpsBuEc23BLYfKa2YJ9GN8%2BdvxMtZe0r9%2Fd1ySpfc%2B2c6DCpiiH5%2Bk4zd6m5xGlp8%2FPVXAV5ZLOPpPeZGIj7WABHLwqcuaY4kcyAMYP1AcA9DNOHA%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\"nel\":\"{\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\"server\":\"cloudflare\",\"cf-ray\":\"662c3793fdf34ba0-BKK\",\"alt-svc\":\"h3-27=\\\":443\\\"; ma=86400, h3-28=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400, h3=\\\":443\\\"; ma=86400\"},\"statusCode\":201,\"request\":{\"path\":\"/todos\",\"method\":\"post\",\"prefix\":\"[POST /todos]\"}}}]}",
                  "mime_type": "application/json"
                }
              ]
            }
          ],
          "step_passed": 10,
          "step_failed": 1,
          "step_skipped": 3,
          "step_undefined": 0,
          "result": false,
          "status": "failed",
          "duration": 0.587,
          "timestamp": "2021-06-21T09:30:15+00:00",
          "metadata": {
            "id": "f4f1f17a-c867-4597-b148-ae0ea6215094",
            "startTime": "2021-06-21T09:30:15+00:00",
            "name": "jsonplaceholder from typecode",
            "key": "JSON-PLACEHOLDER",
            "env": "local",
            "duration": 1.302,
            "success": false,
            "durationFormat": "00:00"
          }
        }
      ],
      "total": 2,
      "passed": 0,
      "failed": 2,
      "skipped": 0,
      "undefined": 0,
      "result": false,
      "duration": 1.302,
      "timestamp": "2021-06-21T09:30:15+00:00",
      "type": "feature",
      "feature_name": "POST /todos",
      "metadata": {
        "id": "f4f1f17a-c867-4597-b148-ae0ea6215094",
        "startTime": "2021-06-21T09:30:15+00:00",
        "name": "jsonplaceholder from typecode",
        "key": "JSON-PLACEHOLDER",
        "env": "local",
        "duration": 1.302,
        "success": false,
        "durationFormat": "00:00"
      }
    }
  ]
}
